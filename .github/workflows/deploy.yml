name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            export DOCKER_BUILDKIT=1
            echo "=== 디스크 공간 정리 ==="
            df -h
            docker image prune -a -f
            docker container prune -f
            docker volume prune -f
            docker builder prune -a -f

            echo "=== SSH 연결 성공 ==="
            set -e
            cd ~/LifeOnHana_AI

            echo "=== 최신 코드 가져오기 ==="
            git fetch https://yena45:${{ secrets.GH_TOKEN }}@github.com/Hanaro-JSON/LifeOnHana_AI.git main
            git reset --hard FETCH_HEAD

            echo "=== 기존 컨테이너 중지 ==="
            docker-compose down --remove-orphans

            echo "=== 환경 변수 설정 ==="
            export MYSQL_HOST=${{ secrets.MYSQL_HOST }}
            export MYSQL_USER=${{ secrets.MYSQL_USER }}
            export MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            export CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}
            export REDIS_HOST=${{ secrets.REDIS_HOST }}
            export REDIS_PORT=${{ secrets.REDIS_PORT }}
            export CACHE_TTL=${{ secrets.CACHE_TTL }}
            export CACHE_MAX_SIZE=${{ secrets.CACHE_MAX_SIZE }}

            echo "=== 모델 파일 다운로드 ==="
            bash download_model.sh

            echo "=== 빌드 시 환경 변수 적용 ==="
            MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
            MYSQL_USER=${{ secrets.MYSQL_USER }} \
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }} \
            CACHE_TTL=${{ secrets.CACHE_TTL }} \
            CACHE_MAX_SIZE=${{ secrets.CACHE_MAX_SIZE }} \
            docker-compose build --no-cache | tee docker-build.log
            
            echo "=== 컨테이너 실행 ==="
            docker-compose up -d
            
            echo "=== 배포 완료 ==="
